<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">

<service_bundle type="manifest" name="prometheus-node-exporter">
	<service name="network/prometheus-node-exporter" type="service" version="1">
		<create_default_instance enabled="true"/>
		<single_instance/>

		<dependency name="network" grouping="require_all" restart_on="error" type="service">
			<service_fmri value="svc:/milestone/network:default"/>
		</dependency>
		<dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
			<service_fmri value="svc:/system/filesystem/local"/>
		</dependency>

		<exec_method 
			type="method" 
			name="start" 
			exec="/opt/argo/svc/method/prometheus-node-exporter %m" 
			timeout_seconds="60">
		</exec_method>

		<exec_method 
			type="method" 
			name="stop" 
			exec=":kill" 
			timeout_seconds="60">
		</exec_method>

		<exec_method
			type='method'
			name='refresh'
			exec='/opt/argo/svc/method/prometheus-node-exporter %m'
			timeout_seconds='60'>
		</exec_method>

		<property_group name="startd" type="framework">
			<propval name="duration" type="astring" value="child"/>
			<!-- sub-process core dumps shouldn't restart session --> 
			<propval name='ignore_error' type='astring' value='core,signal'/> 
		</property_group>
		
		<property_group name="config" type="application">
			<propval name='executable_file' 	type='astring' value='/opt/argo/bin/prometheus-node-exporter'/>
			<propval name='kstat_config_file'	type='astring' value='/opt/argo/etc/kstat_config.yml'/>
			<propval name='pid_file'		type='astring' value='/opt/argo/var/run/prometheus-node-exporter.pid'/>
		</property_group>

		<stability value="Evolving"/>
		<template>
			<common_name>
				<loctext xml:lang="go">
					Golang program for gathering node statistics and providing them to Prometheus.
				</loctext>
			</common_name>
		</template>
	</service>
</service_bundle>
